#include<bits/stdc++.h>
using namespace std;
bool isPrime(int n) {
    if (n <= 1) return false;
    if (n == 2) return true;
    if (n % 2 == 0) return false;
    for (int i = 3; i <= sqrt(n); i += 2) {
        if (n % i == 0) return false;
    }
    return true;
}
vector<int> rearrangeArray(const vector<int>& arr) {
    vector<int> primes;
    vector<int> nonPrimes;
    for (int num : arr) {
        if (isPrime(num)) {
            primes.push_back(num);
        } else {
            nonPrimes.push_back(num);
        }
    }
    sort(primes.begin(), primes.end());
    sort(nonPrimes.begin(), nonPrimes.end(), greater<int>());
    vector<int> result;
    if (!primes.empty()) {
        result.push_back(primes.back());
        primes.pop_back();
    }
    if (primes.size() > 1) {
        result.insert(result.end(), primes.begin() + 1, primes.end());
    }
    result.insert(result.end(), nonPrimes.begin(), nonPrimes.end());
    if (!primes.empty()) {
        result.push_back(primes.front());
    }
    return result;
}
void printArray(const vector<int>& arr) {
    for (size_t i = 0; i < arr.size(); ++i) {
        cout << arr[i];
        if (i != arr.size() - 1) {
            cout << ",";
        }
    }
    cout << std::endl;
}

int main() {
    vector<int> arr1 = {5, 1, 8, 11, 2};
    vector<int> result1 = rearrangeArray(arr1);
    cout << "Sorted array for prime: ";
    printArray(result1);
    vector<int> arr2 = {1, 6, 4, 13, 9, 3};
    vector<int> result2 = rearrangeArray(arr2);
    cout << "Sorted array for prime: ";
    printArray(result2);
    return 0;
}
